import React, { useState, useEffect } from "react";

function ProductImageGallery({ product }) {
  const imageBaseUrl = "http://localhost:8000/";

  // Gom c·∫£ ·∫£nh ƒë·∫°i di·ªán v√† ·∫£nh ph·ª• th√†nh m·ªôt m·∫£ng
  const images = [
    ...(product?.Image ? [{ Image: product.Image }] : []),
    ...(Array.isArray(product?.images) ? product.images : []),
  ];

  // State l∆∞u index ·∫£nh ch√≠nh hi·ªán t·∫°i
  const [mainIndex, setMainIndex] = useState(0);
  const [imageError, setImageError] = useState(false);

  // Khi danh s√°ch ·∫£nh thay ƒë·ªïi, reset v·ªÅ ·∫£nh ƒë·∫ßu ti√™n
  useEffect(() => {
    if (images.length > 0) {
      setMainIndex(0);
      setImageError(false);
    }
  }, [images.length]);

  // H√†m l·∫•y ƒë∆∞·ªùng d·∫´n ·∫£nh (∆∞u ti√™n tr∆∞·ªùng Image)
  const getImagePath = (img) => img.Image || img.Image_path || img.image_path || "";

  // H√†m x·ª≠ l√Ω n√∫t tr√°i
  const handlePrev = () => {
    setMainIndex((prev) => (prev === 0 ? images.length - 1 : prev - 1));
    setImageError(false);
  };

  // H√†m x·ª≠ l√Ω n√∫t ph·∫£i
  const handleNext = () => {
    setMainIndex((prev) => (prev === images.length - 1 ? 0 : prev + 1));
    setImageError(false);
  };

  // H√†m x·ª≠ l√Ω khi ·∫£nh l·ªói
  const handleImageError = () => {
    setImageError(true);
  };

  // N·∫øu kh√¥ng c√≥ ·∫£nh
  if (images.length === 0) {
    return (
      <div style={{
        width: "100%",
        height: "400px",
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        background: "#f8f9fa",
        borderRadius: "8px",
        border: "2px dashed #dee2e6"
      }}>
        <div style={{ textAlign: "center", color: "#6c757d" }}>
          <div style={{ fontSize: "48px", marginBottom: "12px" }}>üì∑</div>
          <div style={{ fontSize: "16px" }}>Kh√¥ng c√≥ h√¨nh ·∫£nh</div>
        </div>
      </div>
    );
  }

  return (
    <div>
      {/* ·∫¢nh ch√≠nh */}
      {images[mainIndex] && getImagePath(images[mainIndex]) && !imageError ? (
        <img
          src={imageBaseUrl + encodeURI(getImagePath(images[mainIndex]))}
          alt={product?.Name || product?.name || "·∫¢nh s·∫£n ph·∫©m"}
          onError={handleImageError}
          style={{
            backgroundColor: "#fff",
            objectFit: "contain", // Thay ƒë·ªïi t·ª´ cover th√†nh contain ƒë·ªÉ hi·ªÉn th·ªã full ·∫£nh
            display: "block",
            margin: "0 auto",
            borderRadius: "8px",
            boxShadow: "0 4px 12px rgba(0,0,0,0.1)", // Shadow ƒë·∫πp h∆°n
            maxWidth: "100%",
            maxHeight: "500px", // Gi·ªõi h·∫°n chi·ªÅu cao
          }}
        />
      ) : (
        // Placeholder khi ·∫£nh l·ªói
        <div style={{
          width: "100%",
          height: "400px",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          background: "#f8f9fa",
          borderRadius: "8px",
          border: "2px dashed #dee2e6",
          margin: "0 auto"
        }}>
          <div style={{ textAlign: "center", color: "#6c757d" }}>
            <div style={{ fontSize: "48px", marginBottom: "8px" }}>‚ùå</div>
            <div style={{ fontSize: "14px" }}>·∫¢nh kh√¥ng t·∫£i ƒë∆∞·ª£c</div>
          </div>
        </div>
      )}

      {/* Slider ·∫£nh ph·ª• + n√∫t chuy·ªÉn */}
      <div style={{
        display: "flex",
        alignItems: "center",
        gap: "25px",
        marginTop: "16px",
        justifyContent: "center",
      }}>
        {/* N√∫t tr∆∞·ªõc */}
        <button
          onClick={handlePrev}
          disabled={images.length <= 1}
          style={{
            padding: "8px 14px", // TƒÉng padding m·ªôt ch√∫t
            backgroundColor: images.length <= 1 ? "#f5f5f5" : "#007bff",
            color: images.length <= 1 ? "#999" : "#fff",
            border: "none",
            borderRadius: "6px", // Bo tr√≤n h∆°n
            cursor: images.length <= 1 ? "not-allowed" : "pointer",
            fontSize: "18px",
            fontWeight: "600",
            transition: "all 0.2s ease",
            boxShadow: images.length <= 1 ? "none" : "0 2px 4px rgba(0,123,255,0.2)"
          }}
          onMouseEnter={(e) => {
            if (images.length > 1) {
              e.target.style.backgroundColor = "#0056b3";
              e.target.style.transform = "scale(1.05)";
            }
          }}
          onMouseLeave={(e) => {
            if (images.length > 1) {
              e.target.style.backgroundColor = "#007bff";
              e.target.style.transform = "scale(1)";
            }
          }}
        >
          ‚Äπ
        </button>

        {/* C√°c ·∫£nh ph·ª•, ch·ªâ t·ªëi ƒëa 5 ·∫£nh */}
        {(() => {
          const maxThumbs = 5;
          const thumbs = images.slice(0, maxThumbs);

          return thumbs.map((img, index) =>
            getImagePath(img) ? (
              <img
                key={img.Image_ID || img.image_id || index}
                src={imageBaseUrl + encodeURI(getImagePath(img))}
                alt={`·∫¢nh ${index + 1}`}
                onClick={() => {
                  setMainIndex(index);
                  setImageError(false);
                }}
                style={{
                  width: "100px",
                  height: "100px",
                  objectFit: "cover",
                  border: index === mainIndex ? "3px solid #007bff" : "2px solid #e9ecef", // Border ƒë·∫πp h∆°n
                  borderRadius: "6px", // Bo tr√≤n h∆°n
                  cursor: "pointer",
                  transition: "all 0.2s ease", // Smooth transition
                  backgroundColor: "#fff",
                  boxShadow: index === mainIndex
                    ? "0 4px 12px rgba(0,123,255,0.25)" // Shadow ƒë·∫πp h∆°n khi active
                    : "0 2px 4px rgba(0,0,0,0.1)",
                  opacity: index === mainIndex ? 1 : 0.8, // L√†m m·ªù ·∫£nh kh√¥ng active
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.transform = "scale(1.08)";
                  e.currentTarget.style.opacity = "1";
                  e.currentTarget.style.boxShadow = "0 6px 16px rgba(0,123,255,0.3)";
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.transform = "scale(1)";
                  e.currentTarget.style.opacity = index === mainIndex ? "1" : "0.8";
                  e.currentTarget.style.boxShadow = index === mainIndex
                    ? "0 4px 12px rgba(0,123,255,0.25)"
                    : "0 2px 4px rgba(0,0,0,0.1)";
                }}
              />
            ) : null
          );
        })()}

        {/* N√∫t sau */}
        <button
          onClick={handleNext}
          disabled={images.length <= 1}
          style={{
            padding: "8px 14px", // TƒÉng padding m·ªôt ch√∫t
            backgroundColor: images.length <= 1 ? "#f5f5f5" : "#007bff",
            color: images.length <= 1 ? "#999" : "#fff",
            border: "none",
            borderRadius: "6px", // Bo tr√≤n h∆°n
            cursor: images.length <= 1 ? "not-allowed" : "pointer",
            fontSize: "18px",
            fontWeight: "600",
            transition: "all 0.2s ease",
            boxShadow: images.length <= 1 ? "none" : "0 2px 4px rgba(0,123,255,0.2)"
          }}
          onMouseEnter={(e) => {
            if (images.length > 1) {
              e.target.style.backgroundColor = "#0056b3";
              e.target.style.transform = "scale(1.05)";
            }
          }}
          onMouseLeave={(e) => {
            if (images.length > 1) {
              e.target.style.backgroundColor = "#007bff";
              e.target.style.transform = "scale(1)";
            }
          }}
        >
          ‚Ä∫
        </button>
      </div>

      {/* Th√¥ng tin ·∫£nh hi·ªán t·∫°i */}
      {images.length > 1 && (
        <div style={{
          textAlign: "center",
          marginTop: "12px",
          fontSize: "14px",
          color: "#6c757d"
        }}>
          {mainIndex + 1} / {images.length}
        </div>
      )}
    </div>
  );
}

export default ProductImageGallery;